[
  {
    "name": "pixpic - upscale",
    "code": "case'pixpic': {\n let q = m.quoted || m\n let mime = (q.msg || q).mimetype || ''\n if (!/image/.test(mime)) return m.reply('❌ Balas gambar dengan perintah *pixpic* untuk meningkatkan kualitasnya.')\n try {\n await conn.sendMessage(m.chat, { react: { text: '🕒', key: m.key } })\n let imgBuffer = await q.download()\n const FormData = require('form-data')\n const form = new FormData()\n form.append('reqtype', 'fileupload')\n form.append('fileToUpload', imgBuffer, 'image.png')\n const upload = await axios.post('https://catbox.moe/user/api.php', form, {\n headers: form.getHeaders()\n })\n if (!upload.data || !upload.data.includes('https://')) return m.reply('❌ Gagal upload ke Catbox.')\n let imageUrl = upload.data.trim()\n await conn.sendMessage(m.chat, { react: { text: '⚙️', key: m.key } })\n const res = await fetch(`https://api.nekorinn.my.id/tools/pxpic-upscale?imageUrl=${encodeURIComponent(imageUrl)}`)\n const json = await res.json()\n if (!json.result) return m.reply('❌ Gagal memproses gambar.')\n await conn.sendMessage(m.chat, {\n image: { url: json.result },\n caption: '💯 *Image quality improved (HD)*',\n }, { quoted: m })\n } catch (err) {\n console.error(err)\n m.reply('❌ Terjadi kesalahan saat memproses gambar.')\n }\n}\nbreak"
  },
  {
    "name": "carbonify",
    "code": "case 'carbonify':\ncase 'carbon': {\n if (!text) return m.reply('❌ Masukkan kodenya, contoh:\\n.carbonify console.log(\"Hello World!\")');\n\n try {\n const url = `https://api.nekorinn.my.id/maker/carbonify?code=${encodeURIComponent(text)}`;\n await conn.sendMessage(m.chat, {\n image: { url },\n caption: `🧾 Hasil Carbonify dari kode:\\n\\n\\`\\`\\`${text}\\`\\`\\``,\n footer: 'Carla Assistant'\n }, { quoted: m });\n } catch (e) {\n console.error(e);\n m.reply('❌ Gagal memproses permintaan.');\n }\n}\nbreak;"
  },
  {
    "name": "sendfitur",
    "code": "case 'sendcase':\ncase 'sendfitur': {\n if (!isCreator) return reply(mess.creator)\n if (!m.quoted) return m.reply('Kutip pesan seseorang!');\n if (!text) return m.reply(`Contoh: ${p_c} menu`);\n const getCase = async (caseName) => {\n try {\n const fileContent = await fs.promises.readFile('./case.js', \"utf-8\");\n const caseRegex = new RegExp(`case '${caseName}'[\\\\s\\\\S]*?break`, 'g');\n const match = fileContent.match(caseRegex);\n if (!match) {\n return m.reply(`Case '${caseName}' tidak ditemukan.`);\n }\n return match[0];\n } catch (error) {\n return m.reply(`Terjadi kesalahan saat membaca file: ${error.message}`);\n }\n };\n const caseName = text.trim();\n getCase(caseName)\n .then(caseCode => {\n const recipient = m.quoted ? m.quoted.sender : m.mentionedJid[0];\n if (!recipient || !recipient.includes('@s.whatsapp.net')) {\n return m.reply('Format ID WhatsApp tidak valid!');\n }\n const sendFeature = async (recipient, caseCode) => {\n try {\n const contact = (await conn.onWhatsApp(recipient.split('@')[0]))[0] || {};\n if (!contact) return m.reply('Kontak tidak ditemukan di WhatsApp.');\n const message = `Hi, kamu dapet kiriman fitur nih!\\n\\n${caseCode}`;\n await conn.sendMessage(recipient, {\n text: message\n }, {\n quoted: m\n });\n m.reply('Fitur berhasil terkirim!');\n } catch (error) {\n console.error('Terjadi kesalahan:', error.message);\n m.reply('Terjadi kesalahan saat mengirim fitur: ' + error.message);\n }\n };\n sendFeature(recipient, caseCode);\n })\n .catch(error => m.reply(`Terjadi kesalahan: ${error.message}`));\n}\nbreak"
  }
]